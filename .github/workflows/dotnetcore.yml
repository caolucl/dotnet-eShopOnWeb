name: eShopOnWeb Build and Test

#on: [push, pull_request, workflow_dispatch]
on:
  # Trigger the action manually from the UI
  workflow_dispatch:
  # Trigger the action when I create or push a `release/**` branch
  push:
    branches:
      - 'release/**'
env:
  DOCKER_IMAGE_NAME: eshopweb
  DOCKER_REGISTRY_URL: caolucl

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '8.0.x'
        include-prerelease: true

    - name: Build with dotnet
      run: dotnet build ./eShopOnWeb.sln --configuration Release
    
    - name: Test with dotnet
      run: dotnet test ./eShopOnWeb.sln --configuration Release
    - name: Get the release version
      # i.e.: release/1.0.0 -> 1.0.0
      id: strip-branch-name
      run: |
        release_version=$(echo "${{ github.ref }}" | sed 's/refs\/heads\/.*\///')
        echo "Building release version $release_version"
        echo "RELEASE_VERSION=$release_version" >> $GITHUB_ENV
      shell: bash

    - name: Build the Docker image
      run: docker build -f src/Web/Dockerfile . --tag $DOCKER_IMAGE_NAME:$RELEASE_VERSION
      
    - name: Docker Scout CVEs
      uses: docker/scout-action@v0.18.1
      with:
          command: cves
          image: "$DOCKER_IMAGE_NAME:$RELEASE_VERSION" # If image is not set (or empty) the most recently built image, if any, will be used instead.
          only-fixed: true
          only-severities: critical,high
          write-comment: true
          github-token: ${{ secrets.GIT_TOKEN }} # to be able to write the comment
          exit-code: true

    - name: Tag the image for the private registry
      run: docker tag $DOCKER_IMAGE_NAME:$RELEASE_VERSION $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$RELEASE_VERSION
    
    - name: Create a latest image as well
      run: docker tag $DOCKER_IMAGE_NAME:$RELEASE_VERSION $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:latest
    - name: login to docker registry
      uses: docker/login-action@v3
      with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}
    - name: push docker image
      run: docker push $DOCKER_REGISTRY_URL/$DOCKER_IMAGE_NAME:$RELEASE_VERSION
    #- name: build and push docker image to registry
    #  uses: docker/build-push-action@v5
    #  with:
    #     context: DockerFileFolder/
    #      push: true
    #      tags: black1512/demo1:latest
    
    
